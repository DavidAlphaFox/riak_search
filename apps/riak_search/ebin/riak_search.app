{application, riak_search,
 [
  {description, "Riak Search"},
  {vsn, "0.12.0"},
  {modules, [
             search,
             plists,
             riak_indexed_doc,
             riak_search,
             riak_search_cmd,
             riak_search_app,
             riak_search_backend,
             riak_search_config,
             riak_search_client,
             riak_search_dir_indexer,
             riak_search_sup,
             riak_search_preplan,
             riak_search_preplan1,
             riak_search_facets,
             riak_search_index_fsm,
             riak_search_index_fsm_sup,
             riak_search_delete_fsm,
             riak_search_delete_fsm_sup,
             riak_search_kv_extractor,
             riak_search_kv_hook,
             riak_search_kv_json_extractor,
             riak_search_kv_raw_extractor,
             riak_search_kv_xml_extractor,
             riak_search_op,
             riak_search_op_land,
             riak_search_op_lor,
             riak_search_op_lnot,
             riak_search_op_term,
             riak_search_op_phrase,
             riak_search_op_field,
             riak_search_op_inclusive_range,
             riak_search_op_exclusive_range,
             riak_search_op_proximity,
             riak_search_op_node,
             riak_search_schema,
             riak_search_schema_parser,
             riak_search_shell,
             riak_search_test,
             riak_search_utils,
             riak_search_vnode,
             riak_search_vnode_sup,
             merge_index_backend,
             riak_search_basic_qc,
             riak_search_operators_qc,
             riak_search_op_mockterm,
             riak_search_ets_backend,
             basho_bench_driver_riaksearch
            ]},
  {registered, []},
  {applications, [
                  kernel,
                  stdlib,
                  riak_core,
                  riak_kv,
                  riak_search_core,
                  qilr,
                  merge_index
                 ]},
  {mod, { riak_search_app, []}},
  {env, [{search_backend, merge_index_backend},
         %% N value to use for indices
         {n_val, 2},
         %% How many index terms get sent in a batch to the vnodes
         {index_batch_size, 10000},
         %% Threshold for the index FSM delaying return of index_terms call 
         {index_overload_thresh, 200},
         %% Number of workers to use when indexing a directory
         {dir_index_workers, 32}
        ]}

 ]}.
